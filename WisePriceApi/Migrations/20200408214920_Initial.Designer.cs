// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WisePriceApi.Models;

namespace WisePriceApi.Migrations
{
    [DbContext(typeof(WisePriceApiContext))]
    [Migration("20200408214920_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WisePriceApi.Models.Deal", b =>
                {
                    b.Property<int>("DealId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DownVotes");

                    b.Property<int>("ItemId");

                    b.Property<int>("LocationId");

                    b.Property<string>("Price");

                    b.Property<DateTime>("TimeUpdated");

                    b.Property<int>("UpVotes");

                    b.Property<string>("UserId");

                    b.HasKey("DealId");

                    b.HasIndex("ItemId");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            DealId = 1,
                            DownVotes = 2,
                            ItemId = 1,
                            LocationId = 1,
                            Price = "$10 for 5 lbs",
                            TimeUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpVotes = 10,
                            UserId = "145c9f41-ed89-43c7-8619-e13188de7188"
                        },
                        new
                        {
                            DealId = 2,
                            DownVotes = 1,
                            ItemId = 2,
                            LocationId = 2,
                            Price = "$10",
                            TimeUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpVotes = 8,
                            UserId = "test"
                        },
                        new
                        {
                            DealId = 3,
                            DownVotes = 2,
                            ItemId = 1,
                            LocationId = 1,
                            Price = "Buy 2lbs get 1lb free",
                            TimeUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpVotes = 10,
                            UserId = "145c9f41-ed89-43c7-8619-e13188de7188"
                        });
                });

            modelBuilder.Entity("WisePriceApi.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ItemName");

                    b.HasKey("ItemId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ItemName = "Strawberry"
                        },
                        new
                        {
                            ItemId = 2,
                            ItemName = "Milk"
                        },
                        new
                        {
                            ItemId = 3,
                            ItemName = "Beef"
                        });
                });

            modelBuilder.Entity("WisePriceApi.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.Property<int>("ZipCode");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address = "300 Bellevue Way NE",
                            Name = "SafeWay",
                            ZipCode = 98015
                        },
                        new
                        {
                            LocationId = 2,
                            Address = "2636 Bellevue Way NE",
                            Name = "QFC",
                            ZipCode = 98004
                        },
                        new
                        {
                            LocationId = 3,
                            Address = "1212 Bellevue Way NE",
                            Name = "QFC",
                            ZipCode = 98004
                        },
                        new
                        {
                            LocationId = 4,
                            Address = "1212 Seattle Way NE",
                            Name = "SafeWay",
                            ZipCode = 98015
                        });
                });

            modelBuilder.Entity("WisePriceApi.Models.PinnedDeal", b =>
                {
                    b.Property<int>("PinnedDealId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DealId");

                    b.Property<string>("UserId");

                    b.HasKey("PinnedDealId");

                    b.HasIndex("DealId");

                    b.HasIndex("UserId");

                    b.ToTable("PinnedDeals");

                    b.HasData(
                        new
                        {
                            PinnedDealId = 1,
                            DealId = 1,
                            UserId = "145c9f41-ed89-43c7-8619-e13188de7188"
                        },
                        new
                        {
                            PinnedDealId = 2,
                            DealId = 2,
                            UserId = "test"
                        },
                        new
                        {
                            PinnedDealId = 3,
                            DealId = 3,
                            UserId = "test"
                        });
                });

            modelBuilder.Entity("WisePriceApi.Models.PostedDeal", b =>
                {
                    b.Property<int>("PostedDealId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DealId");

                    b.Property<string>("UserId");

                    b.HasKey("PostedDealId");

                    b.HasIndex("DealId");

                    b.HasIndex("UserId");

                    b.ToTable("PostedDeals");

                    b.HasData(
                        new
                        {
                            PostedDealId = 1,
                            DealId = 1,
                            UserId = "145c9f41-ed89-43c7-8619-e13188de7188"
                        },
                        new
                        {
                            PostedDealId = 2,
                            DealId = 2,
                            UserId = "test"
                        },
                        new
                        {
                            PostedDealId = 3,
                            DealId = 3,
                            UserId = "test"
                        });
                });

            modelBuilder.Entity("WisePriceApi.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "145c9f41-ed89-43c7-8619-e13188de7188"
                        },
                        new
                        {
                            UserId = "test"
                        });
                });

            modelBuilder.Entity("WisePriceApi.Models.Deal", b =>
                {
                    b.HasOne("WisePriceApi.Models.Item", "Item")
                        .WithMany("Deals")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WisePriceApi.Models.Location", "Location")
                        .WithMany("Deals")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WisePriceApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WisePriceApi.Models.PinnedDeal", b =>
                {
                    b.HasOne("WisePriceApi.Models.Deal", "Deal")
                        .WithMany()
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WisePriceApi.Models.User", "User")
                        .WithMany("PinnedDeals")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WisePriceApi.Models.PostedDeal", b =>
                {
                    b.HasOne("WisePriceApi.Models.Deal", "Deal")
                        .WithMany()
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WisePriceApi.Models.User", "User")
                        .WithMany("PostedDeals")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
